# Generated by Django 5.0.6 on 2025-09-29 02:21

import apps.seguridad.models
import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('finanzas', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoVisitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=50, unique=True, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('requiere_autorizacion', models.BooleanField(default=True, verbose_name='Requiere Autorización')),
                ('tiempo_maximo_visita', models.PositiveIntegerField(default=480, help_text='Tiempo máximo de visita en minutos', verbose_name='Tiempo Máximo (minutos)')),
                ('color', models.CharField(default='#007bff', help_text='Color hexadecimal para identificación visual', max_length=7, verbose_name='Color')),
                ('icono', models.CharField(default='person', help_text='Icono para representar el tipo', max_length=50, verbose_name='Icono')),
                ('esta_activo', models.BooleanField(default=True, verbose_name='Está Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tipo de Visitante',
                'verbose_name_plural': 'Tipos de Visitantes',
                'db_table': 'tipos_visitantes',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionIA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('tipo_algoritmo', models.CharField(choices=[('face_recognition', 'Reconocimiento Facial'), ('license_plate_ocr', 'OCR de Placas'), ('anomaly_detection', 'Detección de Anomalías'), ('object_detection', 'Detección de Objetos'), ('behavioral_analysis', 'Análisis de Comportamiento'), ('predictive_analytics', 'Analítica Predictiva')], max_length=30, verbose_name='Tipo de Algoritmo')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('modelo_ia', models.CharField(help_text='Ruta o nombre del modelo de IA', max_length=200, verbose_name='Modelo de IA')),
                ('parametros_configuracion', models.JSONField(default=dict, help_text='Parámetros de configuración en formato JSON', verbose_name='Parámetros de Configuración')),
                ('umbral_confianza', models.DecimalField(decimal_places=2, default=Decimal('80.00'), help_text='Umbral mínimo de confianza para considerar válida la detección', max_digits=5, verbose_name='Umbral de Confianza (%)')),
                ('esta_activo', models.BooleanField(default=True, verbose_name='Está Activo')),
                ('version_modelo', models.CharField(default='1.0', max_length=20, verbose_name='Versión del Modelo')),
                ('fecha_ultima_actualizacion', models.DateTimeField(auto_now=True, verbose_name='Última Actualización')),
                ('precision_promedio', models.DecimalField(blank=True, decimal_places=2, help_text='Precisión promedio del modelo (%)', max_digits=5, null=True, verbose_name='Precisión Promedio (%)')),
                ('recall_promedio', models.DecimalField(blank=True, decimal_places=2, help_text='Recall promedio del modelo (%)', max_digits=5, null=True, verbose_name='Recall Promedio (%)')),
                ('tiempo_procesamiento_ms', models.PositiveIntegerField(blank=True, help_text='Tiempo promedio de procesamiento en milisegundos', null=True, verbose_name='Tiempo de Procesamiento (ms)')),
                ('generar_alertas', models.BooleanField(default=True, verbose_name='Generar Alertas')),
                ('nivel_alerta_minimo', models.CharField(choices=[('bajo', 'Bajo'), ('medio', 'Medio'), ('alto', 'Alto'), ('critico', 'Crítico')], default='medio', max_length=10, verbose_name='Nivel Mínimo de Alerta')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='configuraciones_ia_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Configuración de IA',
                'verbose_name_plural': 'Configuraciones de IA',
                'db_table': 'configuraciones_ia',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='AccesoVehiculo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('placa_vehiculo', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^[A-Z0-9\\-]{3,10}$', 'Formato de placa inválido')], verbose_name='Placa del Vehículo')),
                ('tipo_vehiculo', models.CharField(choices=[('auto', 'Automóvil'), ('moto', 'Motocicleta'), ('camioneta', 'Camioneta'), ('van', 'Van'), ('camion', 'Camión'), ('bicicleta', 'Bicicleta'), ('otro', 'Otro')], default='auto', max_length=20, verbose_name='Tipo de Vehículo')),
                ('marca', models.CharField(blank=True, max_length=50, verbose_name='Marca')),
                ('modelo', models.CharField(blank=True, max_length=50, verbose_name='Modelo')),
                ('color', models.CharField(blank=True, max_length=30, verbose_name='Color')),
                ('año', models.PositiveIntegerField(blank=True, null=True, verbose_name='Año')),
                ('estado_acceso', models.CharField(choices=[('autorizado', 'Autorizado'), ('denegado', 'Denegado'), ('temporal', 'Acceso Temporal'), ('visitante', 'Vehículo de Visitante'), ('emergencia', 'Vehículo de Emergencia')], default='autorizado', max_length=20, verbose_name='Estado de Acceso')),
                ('foto_vehiculo', models.ImageField(blank=True, null=True, upload_to=apps.seguridad.models.upload_to_seguridad, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Foto del Vehículo')),
                ('datos_ocr_json', models.JSONField(blank=True, default=dict, help_text='Datos OCR de la placa en formato JSON', verbose_name='Datos OCR')),
                ('confianza_ocr', models.DecimalField(blank=True, decimal_places=2, help_text='Confianza del reconocimiento OCR (%)', max_digits=5, null=True, verbose_name='Confianza OCR (%)')),
                ('fecha_inicio_acceso', models.DateTimeField(blank=True, null=True, verbose_name='Inicio de Acceso')),
                ('fecha_fin_acceso', models.DateTimeField(blank=True, null=True, verbose_name='Fin de Acceso')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('propietario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos', to=settings.AUTH_USER_MODEL, verbose_name='Propietario')),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos_registrados', to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('unidad_asignada', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehiculos_autorizados', to='finanzas.unidadhabitacional', verbose_name='Unidad Asignada')),
            ],
            options={
                'verbose_name': 'Acceso de Vehículo',
                'verbose_name_plural': 'Accesos de Vehículos',
                'db_table': 'accesos_vehiculos',
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['placa_vehiculo'], name='accesos_veh_placa_v_5099c8_idx'), models.Index(fields=['estado_acceso'], name='accesos_veh_estado__791c48_idx')],
                'unique_together': {('placa_vehiculo', 'unidad_asignada')},
            },
        ),
        migrations.CreateModel(
            name='AnalisisPredictivoMorosidad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('probabilidad_morosidad', models.DecimalField(decimal_places=2, help_text='Probabilidad de morosidad (%)', max_digits=5, verbose_name='Probabilidad de Morosidad (%)')),
                ('nivel_riesgo', models.CharField(choices=[('muy_bajo', 'Muy Bajo'), ('bajo', 'Bajo'), ('medio', 'Medio'), ('alto', 'Alto'), ('muy_alto', 'Muy Alto')], max_length=15, verbose_name='Nivel de Riesgo')),
                ('factores_riesgo', models.JSONField(default=dict, help_text='Factores que contribuyen al riesgo', verbose_name='Factores de Riesgo')),
                ('historial_pagos_analizado', models.JSONField(default=dict, help_text='Resumen del historial de pagos analizado', verbose_name='Historial de Pagos Analizado')),
                ('recomendaciones', models.TextField(blank=True, help_text='Recomendaciones generadas por el sistema', verbose_name='Recomendaciones')),
                ('acciones_sugeridas', models.JSONField(default=list, help_text='Lista de acciones sugeridas', verbose_name='Acciones Sugeridas')),
                ('modelo_utilizado', models.CharField(help_text='Modelo de IA utilizado para el análisis', max_length=100, verbose_name='Modelo Utilizado')),
                ('version_modelo', models.CharField(max_length=20, verbose_name='Versión del Modelo')),
                ('confianza_prediccion', models.DecimalField(decimal_places=2, help_text='Confianza en la predicción (%)', max_digits=5, verbose_name='Confianza de la Predicción (%)')),
                ('fecha_analisis', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Análisis')),
                ('valido_hasta', models.DateTimeField(help_text='Fecha hasta la cual es válido el análisis', verbose_name='Válido Hasta')),
                ('fue_preciso', models.BooleanField(blank=True, help_text='Si la predicción fue precisa (se evalúa posteriormente)', null=True, verbose_name='Fue Preciso')),
                ('generado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analisis_generados', to=settings.AUTH_USER_MODEL, verbose_name='Generado por')),
                ('unidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analisis_morosidad', to='finanzas.unidadhabitacional', verbose_name='Unidad')),
                ('usuario_analizado', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analisis_morosidad', to=settings.AUTH_USER_MODEL, verbose_name='Usuario Analizado')),
            ],
            options={
                'verbose_name': 'Análisis Predictivo de Morosidad',
                'verbose_name_plural': 'Análisis Predictivos de Morosidad',
                'db_table': 'analisis_predictivo_morosidad',
                'ordering': ['-fecha_analisis'],
                'indexes': [models.Index(fields=['nivel_riesgo'], name='analisis_pr_nivel_r_3f8372_idx'), models.Index(fields=['fecha_analisis'], name='analisis_pr_fecha_a_09a738_idx')],
            },
        ),
        migrations.CreateModel(
            name='IncidenteSeguridad',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('tipo_incidente', models.CharField(choices=[('intrusion', 'Intrusión'), ('vandalismo', 'Vandalismo'), ('robo', 'Robo'), ('accidente', 'Accidente'), ('emergencia_medica', 'Emergencia Médica'), ('incendio', 'Incendio'), ('inundacion', 'Inundación'), ('disturbio', 'Disturbio'), ('sospechoso', 'Actividad Sospechosa'), ('otro', 'Otro')], max_length=30, verbose_name='Tipo de Incidente')),
                ('nivel_gravedad', models.CharField(choices=[('bajo', 'Bajo'), ('medio', 'Medio'), ('alto', 'Alto'), ('critico', 'Crítico')], default='medio', max_length=10, verbose_name='Nivel de Gravedad')),
                ('ubicacion', models.CharField(max_length=200, verbose_name='Ubicación')),
                ('fecha_incidente', models.DateTimeField(verbose_name='Fecha del Incidente')),
                ('estado', models.CharField(choices=[('reportado', 'Reportado'), ('en_investigacion', 'En Investigación'), ('resuelto', 'Resuelto'), ('cerrado', 'Cerrado'), ('escalado', 'Escalado')], default='reportado', max_length=20, verbose_name='Estado')),
                ('evidencia_foto', models.ImageField(blank=True, null=True, upload_to=apps.seguridad.models.upload_to_seguridad, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Evidencia Fotográfica')),
                ('datos_ia_json', models.JSONField(blank=True, default=dict, help_text='Datos de análisis de IA', verbose_name='Análisis IA')),
                ('resolucion', models.TextField(blank=True, verbose_name='Resolución')),
                ('fecha_resolucion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Resolución')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('reportado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='incidentes_reportados', to=settings.AUTH_USER_MODEL, verbose_name='Reportado por')),
                ('resuelto_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidentes_resueltos', to=settings.AUTH_USER_MODEL, verbose_name='Resuelto por')),
                ('unidad_afectada', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incidentes', to='finanzas.unidadhabitacional', verbose_name='Unidad Afectada')),
            ],
            options={
                'verbose_name': 'Incidente de Seguridad',
                'verbose_name_plural': 'Incidentes de Seguridad',
                'db_table': 'incidentes_seguridad',
                'ordering': ['-fecha_incidente'],
                'indexes': [models.Index(fields=['tipo_incidente'], name='incidentes__tipo_in_c95390_idx'), models.Index(fields=['nivel_gravedad'], name='incidentes__nivel_g_cfba31_idx'), models.Index(fields=['estado'], name='incidentes__estado_ec4d2d_idx'), models.Index(fields=['fecha_incidente'], name='incidentes__fecha_i_5c69fc_idx')],
            },
        ),
        migrations.CreateModel(
            name='RegistroAcceso',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_acceso', models.CharField(choices=[('entrada', 'Entrada'), ('salida', 'Salida'), ('intento_fallido', 'Intento Fallido')], max_length=20, verbose_name='Tipo de Acceso')),
                ('metodo_acceso', models.CharField(choices=[('tarjeta', 'Tarjeta de Acceso'), ('facial', 'Reconocimiento Facial'), ('codigo', 'Código de Acceso'), ('manual', 'Apertura Manual'), ('emergencia', 'Acceso de Emergencia')], max_length=20, verbose_name='Método de Acceso')),
                ('ubicacion', models.CharField(help_text='Ubicación específica del acceso', max_length=100, verbose_name='Ubicación')),
                ('fecha_hora', models.DateTimeField(auto_now_add=True, verbose_name='Fecha y Hora')),
                ('exitoso', models.BooleanField(default=True, verbose_name='Acceso Exitoso')),
                ('datos_biometricos', models.JSONField(blank=True, default=dict, verbose_name='Datos Biométricos')),
                ('foto_acceso', models.ImageField(blank=True, null=True, upload_to=apps.seguridad.models.upload_to_seguridad, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Foto del Acceso')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registros_acceso', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Registro de Acceso',
                'verbose_name_plural': 'Registros de Acceso',
                'db_table': 'registros_accesos',
                'ordering': ['-fecha_hora'],
                'indexes': [models.Index(fields=['fecha_hora'], name='registros_a_fecha_h_088fde_idx'), models.Index(fields=['tipo_acceso'], name='registros_a_tipo_ac_fcd501_idx'), models.Index(fields=['metodo_acceso'], name='registros_a_metodo__1029c6_idx')],
            },
        ),
        migrations.CreateModel(
            name='RegistroVisitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(max_length=100, verbose_name='Nombres')),
                ('apellidos', models.CharField(max_length=100, verbose_name='Apellidos')),
                ('documento_identidad', models.CharField(blank=True, max_length=20, validators=[django.core.validators.RegexValidator('^\\d{7,12}$', 'Documento debe contener 7-12 dígitos')], verbose_name='Documento de Identidad')),
                ('telefono', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\+?[\\d\\-\\(\\)\\s]+$', 'Formato de teléfono inválido')], verbose_name='Teléfono')),
                ('motivo_visita', models.CharField(max_length=200, verbose_name='Motivo de la Visita')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente de Autorización'), ('autorizado', 'Autorizado'), ('en_visita', 'En Visita'), ('finalizado', 'Visita Finalizada'), ('rechazado', 'Rechazado'), ('vencido', 'Tiempo Vencido')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('foto_ingreso', models.ImageField(blank=True, null=True, upload_to=apps.seguridad.models.upload_to_seguridad, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Foto de Ingreso')),
                ('foto_salida', models.ImageField(blank=True, null=True, upload_to=apps.seguridad.models.upload_to_seguridad, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'jpeg', 'png'])], verbose_name='Foto de Salida')),
                ('metodo_identificacion', models.CharField(choices=[('manual', 'Registro Manual'), ('facial', 'Reconocimiento Facial'), ('qr', 'Código QR'), ('documento', 'Documento de Identidad'), ('biometrico', 'Datos Biométricos')], default='manual', max_length=20, verbose_name='Método de Identificación')),
                ('datos_faciales_json', models.JSONField(blank=True, default=dict, help_text='Datos de reconocimiento facial en formato JSON', verbose_name='Datos Faciales')),
                ('confianza_reconocimiento', models.DecimalField(blank=True, decimal_places=2, help_text='Porcentaje de confianza del reconocimiento facial', max_digits=5, null=True, verbose_name='Confianza de Reconocimiento (%)')),
                ('fecha_autorizacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Autorización')),
                ('fecha_ingreso', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Ingreso')),
                ('fecha_salida', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Salida')),
                ('codigo_qr', models.CharField(blank=True, help_text='Código QR único para la visita', max_length=100, unique=True, verbose_name='Código QR')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('autorizado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='visitas_autorizadas', to=settings.AUTH_USER_MODEL, verbose_name='Autorizado por')),
                ('registrado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitas_registradas', to=settings.AUTH_USER_MODEL, verbose_name='Registrado por')),
                ('unidad_destino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitas_recibidas', to='finanzas.unidadhabitacional', verbose_name='Unidad de Destino')),
                ('tipo_visitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitas', to='seguridad.tipovisitante', verbose_name='Tipo de Visitante')),
            ],
            options={
                'verbose_name': 'Registro de Visitante',
                'verbose_name_plural': 'Registros de Visitantes',
                'db_table': 'registros_visitantes',
                'ordering': ['-fecha_creacion'],
                'indexes': [models.Index(fields=['estado'], name='registros_v_estado_a17b37_idx'), models.Index(fields=['fecha_ingreso'], name='registros_v_fecha_i_b153b5_idx'), models.Index(fields=['documento_identidad'], name='registros_v_documen_69dfed_idx')],
            },
        ),
    ]
