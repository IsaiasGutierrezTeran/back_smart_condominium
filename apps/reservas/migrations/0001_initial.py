# Generated by Django 5.2.6 on 2025-09-28 22:11

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('finanzas', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TipoAreaComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, unique=True, verbose_name='Nombre')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('icono', models.CharField(default='home', help_text='Icono de Font Awesome o similar', max_length=50, verbose_name='Icono')),
                ('color', models.CharField(default='#007bff', help_text='Color hexadecimal (ej: #007bff)', max_length=7, verbose_name='Color')),
                ('requiere_deposito', models.BooleanField(default=False, verbose_name='Requiere Depósito')),
                ('permite_equipos_externos', models.BooleanField(default=True, verbose_name='Permite Equipos Externos')),
                ('esta_activo', models.BooleanField(default=True, verbose_name='Está Activo')),
                ('orden', models.PositiveIntegerField(default=1, verbose_name='Orden de Visualización')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Tipo de Área Común',
                'verbose_name_plural': 'Tipos de Áreas Comunes',
                'db_table': 'tipos_areas_comunes',
                'ordering': ['orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='AreaComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('capacidad_maxima', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Capacidad Máxima')),
                ('area_m2', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Área (m²)')),
                ('ubicacion', models.CharField(max_length=200, verbose_name='Ubicación')),
                ('permite_reservas', models.BooleanField(default=True, verbose_name='Permite Reservas')),
                ('tiempo_minimo_reserva', models.PositiveIntegerField(default=60, help_text='Tiempo mínimo de reserva en minutos', verbose_name='Tiempo Mínimo (min)')),
                ('tiempo_maximo_reserva', models.PositiveIntegerField(default=480, help_text='Tiempo máximo de reserva en minutos', verbose_name='Tiempo Máximo (min)')),
                ('anticipacion_minima', models.PositiveIntegerField(default=60, help_text='Anticipación mínima en minutos', verbose_name='Anticipación Mínima (min)')),
                ('anticipacion_maxima', models.PositiveIntegerField(default=43200, help_text='Anticipación máxima en minutos', verbose_name='Anticipación Máxima (min)')),
                ('horario_funcionamiento', models.JSONField(default=dict, help_text='\n        Formato: {\n            "lunes": {"inicio": "08:00", "fin": "22:00", "activo": true},\n            "martes": {"inicio": "08:00", "fin": "22:00", "activo": true},\n            ...\n        }\n        ', verbose_name='Horario de Funcionamiento')),
                ('tarifa_por_hora', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Tarifa por Hora')),
                ('tarifa_fin_semana', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Tarifa Fin de Semana')),
                ('deposito_garantia', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Depósito de Garantía')),
                ('requiere_autorizacion', models.BooleanField(default=False, verbose_name='Requiere Autorización')),
                ('permite_decoracion', models.BooleanField(default=True, verbose_name='Permite Decoración')),
                ('permite_musica', models.BooleanField(default=True, verbose_name='Permite Música')),
                ('permite_comida_externa', models.BooleanField(default=True, verbose_name='Permite Comida Externa')),
                ('incluye_mobiliario', models.BooleanField(default=False, verbose_name='Incluye Mobiliario')),
                ('incluye_audio', models.BooleanField(default=False, verbose_name='Incluye Audio')),
                ('incluye_iluminacion', models.BooleanField(default=False, verbose_name='Incluye Iluminación')),
                ('reglas_uso', models.TextField(blank=True, help_text='Reglas específicas para el uso del área', verbose_name='Reglas de Uso')),
                ('equipamiento_incluido', models.JSONField(default=list, help_text='Lista de equipamiento incluido', verbose_name='Equipamiento Incluido')),
                ('restricciones_especiales', models.TextField(blank=True, verbose_name='Restricciones Especiales')),
                ('estado', models.CharField(choices=[('disponible', 'Disponible'), ('mantenimiento', 'En Mantenimiento'), ('inhabilitada', 'Inhabilitada'), ('reservada_admin', 'Reservada por Administración')], default='disponible', max_length=20, verbose_name='Estado')),
                ('fecha_inicio_inhabilitacion', models.DateTimeField(blank=True, null=True, verbose_name='Inicio Inhabilitación')),
                ('fecha_fin_inhabilitacion', models.DateTimeField(blank=True, null=True, verbose_name='Fin Inhabilitación')),
                ('motivo_inhabilitacion', models.TextField(blank=True, verbose_name='Motivo de Inhabilitación')),
                ('imagen_principal', models.ImageField(blank=True, null=True, upload_to='areas_comunes/', verbose_name='Imagen Principal')),
                ('total_reservas', models.PositiveIntegerField(default=0, verbose_name='Total Reservas')),
                ('rating_promedio', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=3, validators=[django.core.validators.MinValueValidator(Decimal('0.00')), django.core.validators.MaxValueValidator(Decimal('5.00'))], verbose_name='Rating Promedio')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='areas_creadas', to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
                ('tipo_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='areas', to='reservas.tipoareacomun', verbose_name='Tipo de Área')),
            ],
            options={
                'verbose_name': 'Área Común',
                'verbose_name_plural': 'Áreas Comunes',
                'db_table': 'areas_comunes',
                'ordering': ['tipo_area__orden', 'nombre'],
            },
        ),
        migrations.CreateModel(
            name='DisponibilidadEspecial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('feriado', 'Feriado'), ('evento_especial', 'Evento Especial'), ('mantenimiento_programado', 'Mantenimiento Programado'), ('reserva_admin', 'Reserva Administrativa')], max_length=30, verbose_name='Tipo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('fecha_inicio', models.DateTimeField(verbose_name='Fecha de Inicio')),
                ('fecha_fin', models.DateTimeField(verbose_name='Fecha de Fin')),
                ('esta_disponible', models.BooleanField(default=False, help_text='Si está marcado, el área estará disponible en estas fechas. Si no, estará bloqueada.', verbose_name='Está Disponible')),
                ('tarifa_especial', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, verbose_name='Tarifa Especial')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('area_comun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='disponibilidades_especiales', to='reservas.areacomun', verbose_name='Área Común')),
                ('creado_por', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Creado por')),
            ],
            options={
                'verbose_name': 'Disponibilidad Especial',
                'verbose_name_plural': 'Disponibilidades Especiales',
                'db_table': 'disponibilidades_especiales',
                'ordering': ['fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='ImagenAreaComun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagen', models.ImageField(upload_to='areas_comunes/galeria/', verbose_name='Imagen')),
                ('titulo', models.CharField(blank=True, max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('es_portada', models.BooleanField(default=False, verbose_name='Es Portada')),
                ('orden', models.PositiveIntegerField(default=1, verbose_name='Orden')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('area_comun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='imagenes', to='reservas.areacomun', verbose_name='Área Común')),
            ],
            options={
                'verbose_name': 'Imagen de Área Común',
                'verbose_name_plural': 'Imágenes de Áreas Comunes',
                'db_table': 'imagenes_areas_comunes',
                'ordering': ['orden', 'fecha_creacion'],
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_reserva', models.DateField(verbose_name='Fecha de la Reserva')),
                ('hora_inicio', models.TimeField(verbose_name='Hora de Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora de Fin')),
                ('duracion_minutos', models.PositiveIntegerField(verbose_name='Duración (minutos)')),
                ('tipo_evento', models.CharField(choices=[('familiar', 'Evento Familiar'), ('social', 'Evento Social'), ('corporativo', 'Evento Corporativo'), ('deportivo', 'Evento Deportivo'), ('educativo', 'Evento Educativo'), ('religioso', 'Evento Religioso'), ('otro', 'Otro')], default='familiar', max_length=20, verbose_name='Tipo de Evento')),
                ('nombre_evento', models.CharField(max_length=200, verbose_name='Nombre del Evento')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('numero_invitados', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Número de Invitados')),
                ('requiere_decoracion', models.BooleanField(default=False, verbose_name='Requiere Decoración')),
                ('requiere_audio', models.BooleanField(default=False, verbose_name='Requiere Audio')),
                ('requiere_iluminacion', models.BooleanField(default=False, verbose_name='Requiere Iluminación')),
                ('requiere_seguridad', models.BooleanField(default=False, verbose_name='Requiere Seguridad')),
                ('requiere_limpieza_extra', models.BooleanField(default=False, verbose_name='Requiere Limpieza Extra')),
                ('telefono_contacto', models.CharField(max_length=20, verbose_name='Teléfono de Contacto')),
                ('email_contacto', models.EmailField(blank=True, max_length=254, verbose_name='Email de Contacto')),
                ('contacto_emergencia', models.CharField(blank=True, max_length=200, verbose_name='Contacto de Emergencia')),
                ('costo_base', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Costo Base')),
                ('costo_servicios_adicionales', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Costo Servicios Adicionales')),
                ('deposito_garantia', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Depósito de Garantía')),
                ('costo_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Costo Total')),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente de Aprobación'), ('confirmada', 'Confirmada'), ('en_uso', 'En Uso'), ('completada', 'Completada'), ('cancelada_usuario', 'Cancelada por Usuario'), ('cancelada_admin', 'Cancelada por Administrador'), ('no_show', 'No se Presentó')], default='pendiente', max_length=20, verbose_name='Estado')),
                ('requiere_aprobacion', models.BooleanField(default=False, verbose_name='Requiere Aprobación')),
                ('fecha_aprobacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Aprobación')),
                ('observaciones_usuario', models.TextField(blank=True, verbose_name='Observaciones del Usuario')),
                ('observaciones_admin', models.TextField(blank=True, verbose_name='Observaciones de Administración')),
                ('motivo_cancelacion', models.TextField(blank=True, verbose_name='Motivo de Cancelación')),
                ('calificacion', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Calificación (1-5)')),
                ('comentario_calificacion', models.TextField(blank=True, verbose_name='Comentario de Calificación')),
                ('fecha_calificacion', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Calificación')),
                ('codigo_reserva', models.CharField(blank=True, max_length=20, unique=True, verbose_name='Código de Reserva')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('aprobado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservas_aprobadas', to=settings.AUTH_USER_MODEL, verbose_name='Aprobado por')),
                ('area_comun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='reservas.areacomun', verbose_name='Área Común')),
                ('unidad', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='finanzas.unidadhabitacional', verbose_name='Unidad')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Reserva',
                'verbose_name_plural': 'Reservas',
                'db_table': 'reservas',
                'ordering': ['-fecha_reserva', '-hora_inicio'],
            },
        ),
        migrations.CreateModel(
            name='ServicioAdicional',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=100, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('precio', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Precio')),
                ('unidad', models.CharField(default='por servicio', help_text='Ej: por hora, por servicio, por persona', max_length=50, verbose_name='Unidad')),
                ('requiere_anticipacion', models.PositiveIntegerField(default=24, help_text='Horas de anticipación requeridas', verbose_name='Anticipación Requerida (horas)')),
                ('esta_activo', models.BooleanField(default=True, verbose_name='Está Activo')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('areas_aplicables', models.ManyToManyField(blank=True, related_name='servicios_disponibles', to='reservas.areacomun', verbose_name='Áreas Aplicables')),
            ],
            options={
                'verbose_name': 'Servicio Adicional',
                'verbose_name_plural': 'Servicios Adicionales',
                'db_table': 'servicios_adicionales',
                'ordering': ['nombre'],
            },
        ),
        migrations.CreateModel(
            name='ReservaServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(default=1, verbose_name='Cantidad')),
                ('precio_unitario', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Precio Unitario')),
                ('precio_total', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Precio Total')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('fecha_contratacion', models.DateTimeField(auto_now_add=True)),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios_contratados', to='reservas.reserva', verbose_name='Reserva')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reservas.servicioadicional', verbose_name='Servicio')),
            ],
            options={
                'verbose_name': 'Servicio de Reserva',
            },
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['estado'], name='reservas_estado_0b2aee_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['fecha_reserva'], name='reservas_fecha_r_d4301e_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['area_comun', 'fecha_reserva'], name='reservas_area_co_3a9971_idx'),
        ),
        migrations.AddIndex(
            model_name='reserva',
            index=models.Index(fields=['usuario'], name='reservas_usuario_07e63c_idx'),
        ),
        migrations.AddConstraint(
            model_name='reserva',
            constraint=models.CheckConstraint(check=models.Q(hora_inicio__lt=models.F('hora_fin')), name='hora_inicio_menor_hora_fin'),
        ),
        migrations.AddIndex(
            model_name='areacomun',
            index=models.Index(fields=['estado'], name='areas_comun_estado_0c59f3_idx'),
        ),
        migrations.AddIndex(
            model_name='areacomun',
            index=models.Index(fields=['tipo_area'], name='areas_comun_tipo_ar_0dcc38_idx'),
        ),
        migrations.AddIndex(
            model_name='areacomun',
            index=models.Index(fields=['permite_reservas'], name='areas_comun_permite_2bfb24_idx'),
        ),
    ]
